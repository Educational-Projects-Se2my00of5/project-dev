document.addEventListener('DOMContentLoaded', function() {
    const commentForm = document.getElementById('comment-form');
    const commentInput = document.getElementById('comment-input');
    const commentsList = document.getElementById('comments-list');
    const commentsNum = document.getElementById('comments-num');
    const commentsCount = document.getElementById('comments-count');
    const commentsTitle = document.getElementById('comments-title');
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
    commentForm.addEventListener('submit', function(e) {
        e.preventDefault();
        
        const commentText = commentInput.value.trim();
        
        if (commentText) {
            // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
            const newComment = createComment('–í—ã', '—Ç–æ–ª—å–∫–æ —á—Ç–æ', commentText);
            
            // –î–æ–±–∞–≤–ª—è–µ–º –≤ –Ω–∞—á–∞–ª–æ —Å–ø–∏—Å–∫–∞
            commentsList.insertBefore(newComment, commentsList.firstChild);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
            const currentCount = parseInt(commentsNum.textContent);
            commentsNum.textContent = currentCount + 1;
            commentsCount.textContent = (currentCount + 1) + (currentCount === 0 ? ' –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π' : 
                                      (currentCount < 4 ? ' –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è' : ' –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤'));
            
            // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
            commentInput.value = '';
        }
    });
    
    // –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è HTML –¥–ª—è –Ω–æ–≤–æ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
    function createComment(author, time, text) {
        const commentDiv = document.createElement('div');
        commentDiv.className = 'comment';
        commentDiv.innerHTML = `
            <div class="comment-header">
                <span class="comment-author">${author}</span>
                <span class="comment-time">${time}</span>
            </div>
            <div class="comment-text">
                ${text}
            </div>
            <div class="comment-actions">
                <span class="comment-action">–û—Ç–≤–µ—Ç–∏—Ç—å</span>
                <span class="comment-action">üëç 0</span>
                <span class="comment-action">üëé</span>
            </div>
        `;
        
        return commentDiv;
    }
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ª–∞–π–∫–æ–≤/–¥–∏–∑–ª–∞–π–∫–æ–≤ –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
    commentsList.addEventListener('click', function(e) {
        if (e.target.classList.contains('comment-action')) {
            const actionText = e.target.textContent.trim();
            
            if (actionText.startsWith('üëç')) {
                // –õ–∞–π–∫
                const count = parseInt(actionText.substring(2)) || 0;
                e.target.textContent = `üëç ${count + 1}`;
            } else if (actionText.startsWith('üëé')) {
                // –î–∏–∑–ª–∞–π–∫
                const count = parseInt(actionText.substring(2)) || 0;
                e.target.textContent = `üëé ${count + 1}`;
            }
        }
    });
});