import ApiClient from './ApiClient.js';
let createPost = document.querySelector('.create-post-btn')


createPost.addEventListener('click', function (){
    window.location.href = '../CreatePost.html'
    console.log(1)
})

let createCat = document.querySelector('#c-cat')

createCat.addEventListener('click', function (){
    window.location.href = '../CreateCategory.html'
    console.log(1)
})

if(localStorage.getItem('role') === "guest"){
    createCat.style.display = "none"
    createPost.style.display = "none"
    console.log(localStorage.getItem('role'))
}

if(localStorage.getItem('role') === "admin"){
    createCat.style.display = "block"
    createPost.style.display = "block"
    console.log(localStorage.getItem('role'))
}

if(localStorage.getItem('role') === "user"){
    createCat.style.display = "none"
    createPost.style.display = "block"
    console.log(localStorage.getItem('role'))
}


document.addEventListener('DOMContentLoaded', function() {
    console.log(localStorage.getItem('role'))

    const tabs = document.querySelectorAll('.tab');
    const postsContainer = document.getElementById('posts-container');
    let activeTab = 'fresh';
    let cachedPosts = {
        fresh: [],
        best: []
    };

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    init();
    
    function init() {
        tabs.forEach(tab => {
            tab.addEventListener('click', switchTab);
        });
        
        // –í—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–º–µ–Ω–µ–Ω–æ -
        loadPosts(activeTab);
        // mockData()
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–æ–≤ –ø–æ –∫–∞—Ä—Ç–æ—á–∫–∞–º –ø–æ—Å—Ç–æ–≤
        postsContainer.addEventListener('click', function(e) {
            const postCard = e.target.closest('.post');
            if (postCard && postCard.dataset.postId) {
                window.location.href = `../Post.html?id=${postCard.dataset.postId}`;
            }
        });
    }
    
    async function loadPosts(type) {
        try {
            showLoading();
            
            // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞ –∫ —Å–µ—Ä–≤–µ—Ä—É
            const response = await fetch(`http://localhost:12345/api/posts?page=0&size=20`);
            
            if (!response.ok) {
                throw new Error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö');
            }
            
            const data = await response.json();

            // const data = await ApiClient.getPosts();

            console.log(data)
            console.log(data.content)


            cachedPosts[type] = data.content;
            showPosts(type);
            
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞:', error);
            showErrorState();
        } finally {
            hideLoadingState();
        }
    }
    
    function showPosts(type) {
        const posts = cachedPosts[type];
        postsContainer.innerHTML = '';
        
        if (posts.length === 0) {
            postsContainer.innerHTML = '<div class="empty-message">–ó–¥–µ—Å—å –ø–æ–∫–∞ –Ω–µ—Ç –ø–æ—Å—Ç–æ–≤</div>';
            return;
        }
        
        posts.forEach(post => {
            const postElement = createPostElement(post);
            postsContainer.appendChild(postElement);
        });
    }
    
    function createPostElement(post) {
        const postElement = document.createElement('div');
        postElement.className = 'post';
        postElement.dataset.postId = post.id; // –î–æ–±–∞–≤–ª—è–µ–º ID –ø–æ—Å—Ç–∞
        postElement.innerHTML = `
            <div class="post-content">
                <h3 class="post-title">${post.title}</h3>
                <div class="post-meta">–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ${post.shortUserInfo.username}</div>
                <span class="vote-count">${post.likes}</span>
                <span>üëç</span>
            </div>
        `;
        return postElement;
    }
    
    function switchTab(e) {
        const tab = e.target;
        if (tab.classList.contains('active')) return;
        
        tabs.forEach(t => t.classList.remove('active'));
        tab.classList.add('active');
        
        activeTab = tab.textContent.toLowerCase() === '–ª—É—á—à–µ–µ' ? 'best' : 'fresh';
        showPosts(activeTab);
        
        if (cachedPosts[activeTab].length === 0) {
            loadPosts(activeTab);
        }
    }
    
    function showLoading() {
        postsContainer.innerHTML = '<div class="loading-state">–ó–∞–≥—Ä—É–∑–∫–∞...</div>';
    }
    
    function hideLoadingState() {
        const loading = document.querySelector('.loading-state');
        if (loading) loading.remove();
    }
    
    function showErrorState() {
        postsContainer.innerHTML = '<div class="error-state">–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.</div>';
    }
    
    // // –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    // mockData();
    
    // function mockData() {
    //     cachedPosts.fresh = [
    //         {
    //             id: 1,
    //             title: "–ù–æ–≤—ã–π —Ñ—Ä–µ–π–º–≤–æ—Ä–∫ –¥–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞",
    //             author: "DevUser",
    //             likes: 124,
    //             comments: 42,
    //             date: "2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥",
    //             description: "–û–±–∑–æ—Ä –Ω–æ–≤–æ–≥–æ JavaScript-—Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å –≤–∞—à –ø–æ–¥—Ö–æ–¥ –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...",
    //             tags: ["#frontend", "#javascript"]
    //         },
    //         {
    //             id: 2,
    //             title: "–ö–∞–∫ —è –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–ª –∑–∞–ø—Ä–æ—Å—ã –∫ –±–∞–∑–µ",
    //             author: "DbMaster",
    //             likes: 89,
    //             comments: 15,
    //             date: "5 —á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥",
    //             description: "–†–∞—Å—Å–∫–∞–∑—ã–≤–∞—é –æ –º–µ—Ç–æ–¥–∞—Ö –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ SQL-–∑–∞–ø—Ä–æ—Å–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥–ª–∏ —É—Å–∫–æ—Ä–∏—Ç—å –Ω–∞—à–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...",
    //             tags: ["#–±–∞–∑—ã–¥–∞–Ω–Ω—ã—Ö", "#–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è"]
    //         }
    //     ];
        
    //     cachedPosts.best = [
    //         {
    //             id: 3,
    //             title: "–õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ React –≤ 2023",
    //             author: "ReactPro",
    //             likes: 456,
    //             comments: 87,
    //             date: "3 –¥–Ω—è –Ω–∞–∑–∞–¥",
    //             description: "–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–æ–¥—Ö–æ–¥—ã –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –Ω–∞ React, –∫–æ—Ç–æ—Ä—ã–µ —Å—Ç–æ–∏—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ –≤–∞—à–∏—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö...",
    //             tags: ["#react", "#frontend"]
    //         },
    //         {
    //             id: 4,
    //             title: "–ü–æ–ª–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ Docker",
    //             author: "DevOpsGuru",
    //             likes: 321,
    //             comments: 54,
    //             date: "1 –Ω–µ–¥–µ–ª—é –Ω–∞–∑–∞–¥",
    //             description: "–í—Å–µ —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å –æ Docker –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞–º–∏...",
    //             tags: ["#docker", "#devops"]
    //         }
    //     ];
        
    //     showPosts(activeTab);
    // }
});